//v1.0.0-MIT License
var k = void 0, l = null; function m(a, c) { var e; ko.e.d && window.console && (e = c && c.c ? c.c + " " + a.a + " (matched: '" + ((c[a.a + ":" + c.c] ? a.a : "") || (c[a.b + ":" + c.c] ? a.b : "") || a.name) + "')" : "default " + a.a, window.console.log("- " + e)) } function n(a) { return a === l || a === k } function p(a, c) { return a === l || "undefined" === c || "string" === c || "number" === c || "boolean" === c || "object" === c && "function" === typeof a.getMonth } function q(a, c) { return a != l && "object" === c && a.length === k && !p(a, c) } function r(a, c) { return a != l && "object" === c && a.length !== k }
function s(a,c,e){var b,d,f,h;b=typeof a;var j=c?c[e.a]||c[e.b]||c[e.name]||{}:{};m(e,j);if(j.custom)"function"===typeof j.custom?d=j.custom(a):(d=j.custom.map(a),n(d)||(d["..map"]=j.custom.map,j.custom.unmap&&(d["..unmap"]=j.custom.unmap)));else if(j.append)a!=l&&(a["..appended"]=k),d=a;else{if(j.exclude)return;if(p(a,b))d=e.f?a:u(a),j.id&&(d["..isid"]=!0);else if(q(a,b)){d={};h=k;for(f in a)b=s(a[f],c,{name:f,b:("[i]"===e.name?e.b:e.name)+"."+f,a:e.a+"."+f}),b!==k&&(d[f]=b,h=d[f]&&d[f]["..isid"]?
f:h);h&&(d["..idName"]=h)}else if(r(a,b)){d=e.f?[]:v([]);d["..push"]=d.push;d.push=function(a){a=s(a,c,{name:"[i]",b:e.name+"[i]",a:e.a+"[i]",f:!0});if(a!==k)d["..push"](a)};for(f=0;f<a.length;f++)d.push(a[f])}}return j.extend?j.extend(d)||d:d}
function w(a,c){var e,b,d=x(a),f=a===d,h=typeof d;m(c,l);if(a===l)return l;if(a!==k&&a["..unmap"])e=a["..unmap"](a);else if(d===l||d.hasOwnProperty("..appended"))e=d;else if(p(d,h)&&!f)e=d;else if(q(d,h))for(b in e={},d)e[b]=w(d[b],{name:b,b:("[i]"===c.name?c.b:c.name)+"."+b,a:c.a+"."+b});else if(r(d,h)){e=[];for(b=0;b<d.length;b++)e.push(w(d[b],{name:"[i]",b:c.name+"[i]",a:c.a+"[i]"}))}return e}
function y(a,c,e){var b,d,f,h,j,t,g=x(c);d=typeof g;f=c!==g;m(e,l);if(!n(c)&&!c.hasOwnProperty("..appended")&&!(c===k||g===a))if(f&&n(g)^n(a))c(a);else if(q(g,d)&&q(a,d))for(b in a)if(g[b]&&"function"===typeof g[b]["..map"])if(z(g[b]))g[b](x(g[b]["..map"](a[b])));else g[b]=g[b]["..map"](a[b]);else a&&a[b]===l&&q(g[b],typeof g[b])?g[b]=l:y(a[b],g[b],{name:b,b:("[i]"===e.name?e.b:e.name)+"."+b,a:e.a+"."+b});else if(r(g,d))if(g[0]["..idName"]){t=g[0]["..idName"];h=[];for(b=a.length-1;0<=b;b--){f=!1;
j=a[b][t];for(d=g.length-1;0<=d;d--)if(j===g[d][t]()){y(a[b],g[b],{name:"[i]",b:e.name+"[i]",a:e.a+"[i]"});f=!0;h[d]=!0;break}f||c.splice(b,1)}for(b=a.length-1;0<=b;b--)h[b]||c.push(a[b])}else{c([]);for(b=0;b<a.length;b++)"function"===typeof c["..map"]?c.push(c["..map"](a)):c.push(a[b])}else f&&c(a)}var x=ko.utils.unwrapObservable,z=ko.isObservable,u=ko.observable,v=ko.observableArray,A={name:"{root}",b:"{root}",a:"{root}"};
ko.viewmodel={logging:!1,fromModel:function(a,c){var e={},b,d,f,h;for(h in c)if(b=c[h]||{},b.length!==k)for(d=0;d<b.length;d++)f=b[d],e[f]={},e[f][h]=!0,e[f].c=h;else for(f in b)e[f]={},e[f][h]=b[f],e[f].c=h;ko.e.d&&window.console&&window.console.log("Mapping From Model");return s(a,e,A)},toModel:function(a){ko.e.d&&window.console&&window.console.log("Mapping To Model");return w(a,A)},updateFromModel:function(a,c){ko.e.d&&window.console&&window.console.log("Update From Model");return y(c,a,A)}};