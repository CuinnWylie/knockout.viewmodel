/*ko.viewmodel.js v1.0 Copyright 2012, Dave Herren http://coderenaissance.github.com/knockout.viewmodel/*/
var j=void 0,k=null;function l(b,c){var e;ko.e.d&&window.console&&(e=c&&c.c?c.c+" "+b.a+" (matched: '"+((c[b.a+":"+c.c]?b.a:"")||(c[b.b+":"+c.c]?b.b:"")||b.name)+"')":"default "+b.a,window.console.log("- "+e))}function m(b,c){return b===k||"undefined"===c||"string"===c||"number"===c||"boolean"===c||"object"===c&&"function"===typeof b.getMonth}function n(b,c){return"object"===c&&b.length===j&&!m(b,c)}function p(b,c){return"object"===c&&b.length!==j}
function q(b,c,e){var a,d,f;f=typeof b;var g=c?c[e.a]||c[e.b]||c[e.name]||{}:{};l(e,g);if(g.custom)"function"===typeof g.custom?a=g.custom(b):(a=g.custom.map(b),a!=j&&a!=k&&(a["..map"]=g.custom.map,g.custom.unmap&&(a["..unmap"]=g.custom.unmap)));else if(g.append)b["..appended"]=j,a=b;else{if(g.exclude)return;if(m(b,f))a=r(b),g.id&&(a["..isid"]=!0);else if(n(b,f)){a={};f=j;for(d in b)temp=q(b[d],c,{name:d,b:("[i]"===e.name?e.b:e.name)+"."+d,a:e.a+"."+d}),temp!==j&&(a[d]=temp,f=a[d]&&a[d]["..isid"]?
d:f);f&&(a["..idName"]=f)}else if(p(b,f)){a=s([]);a["..push"]=a.push;a.push=function(b){b=q(b,c,{name:"[i]",b:e.name+"[i]",a:e.a+"[i]"});if(b!==j)a["..push"](b)};for(d=0;d<b.length;d++)a.push(b[d])}}return g.extend?g.extend(a)||a:a}
function t(b,c){var e,a,d=v(b),f=b===d,g=typeof d;l(c,k);if(b["..unmap"])e=b["..unmap"](b);else if(d.hasOwnProperty("..appended"))e=d;else if(m(d,g)&&!f)e=d;else if(n(d,g))for(a in e={},d)e[a]=t(d[a],{name:a,b:("[i]"===c.name?c.b:c.name)+"."+a,a:c.a+"."+a});else if(p(d,g)){e=[];for(a=0;a<d.length;a++)e.push(t(d[a],{name:"[i]",b:c.name+"[i]",a:c.a+"[i]"}))}return e}
function x(b,c,e){var a,d,f,g,w,u,h=v(c);d=typeof h;f=c!==h;l(e,k);if(!(c===j||h===b))if(f&&(h===k||"undefined"===d)^(b===k||"undefined"===c))c(b);else if(n(h,d)&&n(b,d))for(a in b)if(h[a]&&"function"===typeof h[a]["..map"])if(y(h[a]))h[a](v(h[a]["..map"](b[a])));else h[a]=h[a]["..map"](b[a]);else x(b[a],h[a],{name:a,b:("[i]"===e.name?e.b:e.name)+"."+a,a:e.a+"."+a});else if(p(h,d))if(h[0]["..idName"]){u=h[0]["..idName"];g=[];for(a=b.length-1;0<=a;a--){f=!1;w=b[a][u];for(d=h.length-1;0<=d;d--)if(w===
h[d][u]()){x(b[a],h[a],{name:"[i]",b:e.name+"[i]",a:e.a+"[i]"});f=!0;g[d]=!0;break}f||c.splice(a,1)}for(a=b.length-1;0<=a;a--)g[a]||c.push(b[a])}else{c([]);for(a=0;a<b.length;a++)"function"===typeof c["..map"]?c.push(c["..map"](b)):c.push(b[a])}else f&&c(b)}var v=ko.utils.unwrapObservable,y=ko.isObservable,r=ko.observable,s=ko.observableArray,z={name:"{root}",b:"{root}",a:"{root}"};
ko.viewmodel={logging:!1,fromModel:function(b,c){var e={},a,d,f,g;for(g in c)if(a=c[g]||{},a.length!==j)for(d=0;d<a.length;d++)f=a[d],e[f]={},e[f][g]=!0,e[f].c=g;else for(f in a)e[f]={},e[f][g]=a[f],e[f].c=g;ko.e.d&&window.console&&window.console.log("Mapping From Model");return q(b,e,z)},toModel:function(b){ko.e.d&&window.console&&window.console.log("Mapping To Model");return t(b,z)},updateFromModel:function(b,c){ko.e.d&&window.console&&window.console.log("Update From Model");return x(c,b,z)}};